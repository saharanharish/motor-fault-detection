# -*- coding: utf-8 -*-
"""motar.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NRE-fboaeEr1RzNcs_JWsiPwdiK14sHU
"""

# -----------------------------
# Fault detection (Speed Error Method)
# -----------------------------
speed_error = np.abs(omega_ref - omega)
threshold = np.mean(speed_error[:int(1/dt)]) + 3*np.std(speed_error[:int(1/dt)])
fault_detect_idx = np.where(speed_error > threshold)[0]
fault_detect_times = t[fault_detect_idx]

# Plot results
plt.figure(figsize=(10,6))
plt.plot(t, omega*(60/(2*np.pi)), label='Motor Speed (RPM)')
plt.plot(t, omega_ref*(60/(2*np.pi)), 'k--', label='Reference Speed (RPM)')
plt.scatter(fault_detect_times, omega[fault_detect_idx]*(60/(2*np.pi)),
            color='red', label='Detected Fault', s=15)
plt.xlabel('Time (s)')
plt.ylabel('Speed (RPM)')
plt.title('DC Motor Speed Control with Fault Detection')
plt.legend()
plt.grid(True)
plt.savefig('speed_fault_detection.png', dpi=300)
plt.show()

plt.figure(figsize=(10,4))
plt.plot(t, speed_error, label='Speed Error')
plt.axhline(threshold, color='r', linestyle='--', label='Threshold')
plt.xlabel('Time (s)')
plt.ylabel('Error (rad/s)')
plt.title('Fault Detection Metric (Speed Error)')
plt.legend()
plt.grid(True)
plt.savefig('error_fault_metric.png', dpi=300)
plt.show()